-- PROCEDURE PROC_COMPARE_TEMP_1 (ARUNN_ADMIN)

  CREATE OR REPLACE EDITIONABLE PROCEDURE "ARUNN_ADMIN"."PROC_COMPARE_TEMP_1" as

 V_ERROR_MSG VARCHAR(4000);

BEGIN

BEGIN
insert into post_mig_mis_match_cols (TABLE_NAME, COLUMN_NAME, COMMON_COLUMN_VAL, VALUE_A, VALUE_B)
 (SELECT 'ICTM_ACC', 'INTRATE_CUMAMT_REQD',A.ACC || '~' || A.BRN, A.INTRATE_CUMAMT_REQD, B.INTRATE_CUMAMT_REQD FROM UBSPROD.ICTM_ACC@fcubsv12 A JOIN INTEGRATEDPP.ICZM_ACC B ON A.ACC = B.ACC AND A.BRN = B.BRN WHERE NVL(A.INTRATE_CUMAMT_REQD, '0') <> NVL(B.INTRATE_CUMAMT_REQD, '0') and rownum <6);
  
  COMMIT;

EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_MSG := SQLERRM;
    INSERT INTO TLOG
    values
      ('Bombed due to ' || V_ERROR_MSG || 'for INTRATE_CUMAMT_REQD at ' ||
       systimestamp);
       END;

BEGIN
insert into post_mig_mis_match_cols (TABLE_NAME, COLUMN_NAME, COMMON_COLUMN_VAL, VALUE_A, VALUE_B)
 (SELECT 'ISTM_INSTR_HISTORY','BENEF_ADDR_2',A.CONTRACT_REF_NO || '~' || A.VERSION_NO, TO_CHAR(A.BENEF_ADDR_2), TO_CHAR(B.BENEF_ADDR_2) FROM UBSPROD.ISTM_INSTR_HISTORY@fcubsv12 A JOIN INTEGRATEDPP.ISZM_INSTR_HISTORY B ON A.CONTRACT_REF_NO = B.CONTRACT_REF_NO AND A.VERSION_NO = B.VERSION_NO WHERE NVL(TO_CHAR(A.BENEF_ADDR_2), 'NULL') <> NVL(TO_CHAR(B.BENEF_ADDR_2), 'NULL') and rownum <6);  
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_MSG := SQLERRM;
    INSERT INTO TLOG
    values
      ('Bombed due to ' || V_ERROR_MSG || 'for BENEF_ADDR_2 at ' ||
       systimestamp);
       END;       

BEGIN
insert into post_mig_mis_match_cols (TABLE_NAME, COLUMN_NAME, COMMON_COLUMN_VAL, VALUE_A, VALUE_B)
 (SELECT 'ISTM_INSTR_HISTORY','IDENTIFIER_NAME_2',A.CONTRACT_REF_NO || '~' || A.VERSION_NO, TO_CHAR(A.IDENTIFIER_NAME_2), TO_CHAR(B.IDENTIFIER_NAME_2) FROM UBSPROD.ISTM_INSTR_HISTORY@fcubsv12 A JOIN INTEGRATEDPP.ISZM_INSTR_HISTORY B ON A.CONTRACT_REF_NO = B.CONTRACT_REF_NO AND A.VERSION_NO = B.VERSION_NO WHERE NVL(TO_CHAR(A.IDENTIFIER_NAME_2), 'NULL') <> NVL(TO_CHAR(B.IDENTIFIER_NAME_2), 'NULL') and rownum <6);  
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_MSG := SQLERRM;
    INSERT INTO TLOG
    values
      ('Bombed due to ' || V_ERROR_MSG || 'for IDENTIFIER_NAME_2 at ' ||
       systimestamp);
       END;



BEGIN
insert into post_mig_mis_match_cols (TABLE_NAME, COLUMN_NAME, COMMON_COLUMN_VAL, VALUE_A, VALUE_B)
 (SELECT 'ISTM_INSTR_HISTORY','BENEF_ADDR_1',A.CONTRACT_REF_NO || '~' || A.VERSION_NO, TO_CHAR(A.BENEF_ADDR_1), TO_CHAR(B.BENEF_ADDR_1) FROM UBSPROD.ISTM_INSTR_HISTORY@fcubsv12 A JOIN INTEGRATEDPP.ISZM_INSTR_HISTORY B ON A.CONTRACT_REF_NO = B.CONTRACT_REF_NO AND A.VERSION_NO = B.VERSION_NO WHERE NVL(TO_CHAR(A.BENEF_ADDR_1), 'NULL') <> NVL(TO_CHAR(B.BENEF_ADDR_1), 'NULL') and rownum <6);  
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_MSG := SQLERRM;
    INSERT INTO TLOG
    values
      ('Bombed due to ' || V_ERROR_MSG || 'for proc_compare_temp_1 at ' ||
       systimestamp);
       END;
       
BEGIN
insert into post_mig_mis_match_cols (TABLE_NAME, COLUMN_NAME, COMMON_COLUMN_VAL, VALUE_A, VALUE_B)
 (SELECT 'GETB_UTILS_LOG','LIMIT_ID',A.SERIAL_NO, A.LIMIT_ID, B.LIMIT_ID FROM UBSPROD.GETB_UTILS_LOG@fcubsv12 A JOIN INTEGRATEDPP.GEZB_UTILS_LOG B ON A.SERIAL_NO = B.SERIAL_NO WHERE NVL(A.LIMIT_ID, '0') <> NVL(B.LIMIT_ID, '0') and rownum <6);  
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_MSG := SQLERRM;
    INSERT INTO TLOG
    values
      ('Bombed due to ' || V_ERROR_MSG || 'for proc_compare_temp_1 at ' ||
       systimestamp);
       END;
       
BEGIN
insert into post_mig_mis_match_cols (TABLE_NAME, COLUMN_NAME, COMMON_COLUMN_VAL, VALUE_A, VALUE_B)
 (SELECT 'CLTP_ACCOUNT_MASTER','PRIMARY_APPLICANT_NAME', A.ACCOUNT_NUMBER || '~' || A.BRANCH_CODE || '~' || A.PAYMENT_ESN, TO_CHAR(A.PRIMARY_APPLICANT_NAME), TO_CHAR(B.PRIMARY_APPLICANT_NAME) FROM UBSPROD.CLTP_ACCOUNT_MASTER@fcubsv12 A JOIN INTEGRATEDPP.CLZP_ACCOUNT_MASTER B ON A.ACCOUNT_NUMBER = B.ACCOUNT_NUMBER AND A.BRANCH_CODE = B.BRANCH_CODE AND A.PAYMENT_ESN = B.PAYMENT_ESN WHERE NVL(TO_CHAR(A.PRIMARY_APPLICANT_NAME), 'NULL') <> NVL(TO_CHAR(B.PRIMARY_APPLICANT_NAME), 'NULL') and rownum <6);  
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_MSG := SQLERRM;
    INSERT INTO TLOG
    values
      ('Bombed due to ' || V_ERROR_MSG || 'for proc_compare_temp_1 at ' ||
       systimestamp);
       END;


BEGIN
insert into post_mig_mis_match_cols (TABLE_NAME, COLUMN_NAME, COMMON_COLUMN_VAL, VALUE_A, VALUE_B)
 (SELECT 'ICTB_ACC_PR','DEPOSIT',A.ACC || '~' || A.BRN || '~' || A.PROD, A.DEPOSIT, B.DEPOSIT FROM UBSPROD.ICTB_ACC_PR@fcubsv12 A JOIN INTEGRATEDPP.ICZB_ACC_PR B ON A.ACC = B.ACC AND A.BRN = B.BRN AND A.PROD = B.PROD WHERE NVL(A.DEPOSIT, '0') <> NVL(B.DEPOSIT, '0') and rownum <6);  
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_MSG := SQLERRM;
    INSERT INTO TLOG
    values
      ('Bombed due to ' || V_ERROR_MSG || 'for proc_compare_temp_1 at ' ||
       systimestamp);
       END;       


BEGIN
insert into post_mig_mis_match_cols (TABLE_NAME, COLUMN_NAME, COMMON_COLUMN_VAL, VALUE_A, VALUE_B)
 (SELECT 'STTB_NOTIFICATION','ONCE_SENT',A.BASE_TABLE || '~' || A.NOTIF_CODE || '~' || A.PKEY_VALUES, A.ONCE_SENT, B.ONCE_SENT FROM UBSPROD.STTB_NOTIFICATION@fcubsv12 A JOIN INTEGRATEDPP.STZB_NOTIFICATION B ON A.BASE_TABLE = B.BASE_TABLE AND A.NOTIF_CODE = B.NOTIF_CODE AND A.PKEY_VALUES = B.PKEY_VALUES WHERE NVL(A.ONCE_SENT, '0') <> NVL(B.ONCE_SENT, '0') and rownum <6);  
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_MSG := SQLERRM;
    INSERT INTO TLOG
    values
      ('Bombed due to ' || V_ERROR_MSG || 'for proc_compare_temp_1 at ' ||
       systimestamp);
       END; 
       
BEGIN
insert into post_mig_mis_match_cols (TABLE_NAME, COLUMN_NAME, COMMON_COLUMN_VAL, VALUE_A, VALUE_B)
 (SELECT 'STTB_NOTIFICATION','PROCESS_STATUS',A.BASE_TABLE || '~' || A.NOTIF_CODE || '~' || A.PKEY_VALUES, A.PROCESS_STATUS, B.PROCESS_STATUS FROM UBSPROD.STTB_NOTIFICATION@fcubsv12 A JOIN INTEGRATEDPP.STZB_NOTIFICATION B ON A.BASE_TABLE = B.BASE_TABLE AND A.NOTIF_CODE = B.NOTIF_CODE AND A.PKEY_VALUES = B.PKEY_VALUES WHERE NVL(A.PROCESS_STATUS, '0') <> NVL(B.PROCESS_STATUS, '0') and rownum <6);  
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    V_ERROR_MSG := SQLERRM;
    INSERT INTO TLOG
    values
      ('Bombed due to ' || V_ERROR_MSG || 'for proc_compare_temp_1 at ' ||
       systimestamp);
       END;   
  EXCEPTION
    WHEN OTHERS THEN
      V_ERROR_MSG:=SQLERRM;
      dbms_output.put_line('BOMBED OVERALL due to '||V_ERROR_MSG );     


END;
/
/
